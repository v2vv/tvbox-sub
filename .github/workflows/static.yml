# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 创建 pageDir 文件夹
        run: mkdir -p localPackages pageDir/repo pageDir/token pageDir/config/zx  pageDir/localPackages/pg pageDir/localPackages/zx
      - name: 下载 PG ZX 文件
        run: |
             wget -P localPackages http://104.160.46.225/pg.zip
             wget -P localPackages http://104.160.46.225/zx.zip
      - name: Unzip the archive
        run: find localPackages -type f -name '*pg*.zip' -exec unzip {} -d pageDir/localPackages/pg \;
      - name: Unzip the archive
        run: find localPackages -type f -name '*真心*.zip' -exec unzip {} -d pageDir/localPackages/zx \;
      - name: 生成仓库文件
        env:
          URL: ${{secrets.URL}}
        run: envsubst < templates/repo/repo.json.template > pageDir/repo/repo.json
      - name: 生成配置文件
        env:
          ALI_TOKEN: ${{secrets.ALI_TOKEN}}
          ALI_OPEN_TOKEN: ${{secrets.ALI_OPEN_TOKEN}}
          UC_COOKIE: ${{secrets.UC_COOKIE}}
          QUARK_COOKIE: ${{secrets.QUARK_COOKIE}}
          URL: ${{secrets.URL}}
        run: |
          envsubst <  templates/config/pg.tokenm.template > pageDir/localPackages/pg/lib/tokenm.json
          envsubst <  templates/config/zx.config.template > pageDir/localPackages/zx/json/peizhi.json
          node script/convert.mjs "pg" $URL   pageDir/localPackages/pg/jsm.json pageDir/localPackages/pg/jsm.json
          node script/convert.mjs "zx" $URL   pageDir/localPackages/zx/FongMi.json pageDir/localPackages/zx/FongMi.json
          echo -n  $ALI_TOKEN > pageDir/token/ali_token
          echo -n  $UC_COOKIE > pageDir/token/uc_cookie
          echo -n  $QUARK_COOKIE > pageDir/token/quark_cookie

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "./pageDir/"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
